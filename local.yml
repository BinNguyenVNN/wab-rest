version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  wab_django: &wab_django
    build:
      context: .
      dockerfile: ./compose/local/Dockerfile
    image: wab_local_django
    container_name: wab_django
    depends_on:
      - wab_postgres
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  wab_postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: wab_production_postgres
    container_name: wab_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  pgadmin:
    container_name: wab_production_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
       - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  wab_redis:
    image: redis:5.0
    container_name: wab_redis

  wab_celeryworker:
    <<: *wab_django
    image: wab_local_celeryworker
    container_name: wab_celeryworker
    depends_on:
      - wab_redis
      - wab_postgres
      
    ports: []
    command: /start-celeryworker

  wab_celerybeat:
    <<: *wab_django
    image: wab_local_celerybeat
    container_name: wab_celerybeat
    depends_on:
      - wab_redis
      - wab_postgres
      
    ports: []
    command: /start-celerybeat

  wab_flower:
    <<: *wab_django
    image: wab_local_flower
    container_name: wab_flower
    ports:
      - "5555:5555"
    command: /start-flower
